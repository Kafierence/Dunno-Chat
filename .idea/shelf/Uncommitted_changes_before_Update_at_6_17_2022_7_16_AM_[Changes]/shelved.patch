Index: app/src/main/java/ChatApp/android/Activities/GroupChatScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ChatApp.android.Activities;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\n\r\nimport android.os.Bundle;\r\n\r\nimport ChatApp.android.databinding.ActivityGroupChatScreenBinding;\r\n\r\npublic class GroupChatScreen extends AppCompatActivity {\r\n\r\n    private ActivityGroupChatScreenBinding binding;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding=ActivityGroupChatScreenBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Activities/GroupChatScreen.java b/app/src/main/java/ChatApp/android/Activities/GroupChatScreen.java
--- a/app/src/main/java/ChatApp/android/Activities/GroupChatScreen.java	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/java/ChatApp/android/Activities/GroupChatScreen.java	(date 1655424389029)
@@ -1,19 +1,126 @@
 package ChatApp.android.Activities;
 
+import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.RecyclerView;
 
 
+import android.content.Intent;
 import android.os.Bundle;
+import android.text.TextUtils;
+import android.view.View;
+import android.widget.Toast;
+
+import com.bumptech.glide.Glide;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
 
+import java.util.HashMap;
+
+import ChatApp.android.R;
 import ChatApp.android.databinding.ActivityGroupChatScreenBinding;
+import de.hdodenhof.circleimageview.CircleImageView;
 
 public class GroupChatScreen extends AppCompatActivity {
 
     private ActivityGroupChatScreenBinding binding;
+    private String groupID;
+
+    CircleImageView imageView;
+    RecyclerView recyclerViewGroupMessage;
+    FirebaseDatabase database;
+    FirebaseAuth firebaseAuth;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         binding=ActivityGroupChatScreenBinding.inflate(getLayoutInflater());
         setContentView(binding.getRoot());
+
+        //init view
+        recyclerViewGroupMessage=findViewById(R.id.recyclerViewGroupMessage);
+
+
+        firebaseAuth=FirebaseAuth.getInstance();
+        Intent intent=getIntent();
+        groupID=intent.getStringExtra("groupID");
+        loadGroupInformation();
+
+        //event for back activity
+        binding.imageView2.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finish();
+            }
+        });
+
+        //event for sent buuton
+        binding.sendBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //get message data
+                String message=binding.messageBox.getText().toString();
+                //check validate
+                if(TextUtils.isEmpty(message)){
+                    //empty message
+                    Toast.makeText(GroupChatScreen.this, "Can't Send Empty Message", Toast.LENGTH_SHORT).show();
+
+                }
+                else{
+                    sendMessage(message);
+                }
+            }
+        });
+
+    }
+    public void sendMessage(String message){
+            String timeStamp=""+System.currentTimeMillis();
+        HashMap<String,Object> hashMap=new HashMap<>();
+        hashMap.put("sender",firebaseAuth.getUid());
+        hashMap.put("message",message);
+        hashMap.put("timeStamp",timeStamp);
+        hashMap.put("type","text");
+     DatabaseReference reference=FirebaseDatabase.getInstance().getReference("Groups");
+            reference.child(groupID).child("Messages").child(timeStamp)
+                    .setValue(hashMap).addOnSuccessListener(new OnSuccessListener<Void>() {
+                        @Override
+                        public void onSuccess(Void unused) {
+
+                        }
+                    }).addOnFailureListener(new OnFailureListener() {
+                        @Override
+                        public void onFailure(@NonNull Exception e) {
+                            Toast.makeText(GroupChatScreen.this, "Failed Error send message group", Toast.LENGTH_SHORT).show();
+
+                        }
+                    });
+    }
+    private  void loadGroupInformation(){
+        DatabaseReference reference=FirebaseDatabase.getInstance().getReference("Groups");
+        reference.orderByChild("groupID").equalTo(groupID)
+                .addValueEventListener(new ValueEventListener() {
+                    @Override
+                    public void onDataChange(@NonNull DataSnapshot snapshot) {
+                        for(DataSnapshot dataSnapshot:snapshot.getChildren()){
+                            binding.groupName.setText(dataSnapshot.child("groupName").getValue().toString());
+                            Glide.with(GroupChatScreen.this).load(binding.iconGroup)
+                                    .placeholder(R.drawable.avatar)
+                                    .into(binding.iconGroup);
+                        }
+                    }
+
+                    @Override
+                    public void onCancelled(@NonNull DatabaseError error) {
+
+                    }
+                })
+        ;
+
     }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_group_chat_screen.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Activities.GroupChatScreen\">\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"?attr/colorPrimary\"\r\n        android:gravity=\"center\"\r\n        android:minHeight=\"?attr/actionBarSize\"\r\n        android:theme=\"?attr/actionBarTheme\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:gravity=\"center\"\r\n            android:orientation=\"horizontal\"\r\n            >\r\n\r\n            <ImageView\r\n                android:id=\"@+id/imageView2\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_weight=\"1\"\r\n                app:srcCompat=\"@drawable/ic_left_arrow\"\r\n                app:tint=\"@color/white\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                android:gravity=\"center\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/status\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:text=\"Online\"\r\n                    android:textColor=\"@color/white\"\r\n                    android:visibility=\"gone\" />\r\n            </LinearLayout>\r\n\r\n        </LinearLayout>\r\n\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerView\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:visibility=\"visible\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/cardView2\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/toolbar\" />\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:id=\"@+id/cardView2\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"61dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <EditText\r\n                android:id=\"@+id/messageBox\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                android:background=\"@drawable/border_input\"\r\n                android:ems=\"10\"\r\n                android:hint=\"Write a message .....\"\r\n                android:inputType=\"textPersonName\"\r\n                android:padding=\"10sp\"\r\n\r\n                android:textSize=\"15sp\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/attachmentBtn\"\r\n                android:layout_width=\"24sp\"\r\n                android:layout_height=\"24sp\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginRight=\"15sp\"\r\n                android:backgroundTint=\"#B3ACAC\"\r\n                app:srcCompat=\"@drawable/ic_attachment\"\r\n                app:tint=\"#878282\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/cameraBtn\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginRight=\"15sp\"\r\n                android:layout_weight=\"0\"\r\n                android:backgroundTint=\"#B3ACAC\"\r\n                app:srcCompat=\"@drawable/ic_camera\"\r\n                app:tint=\"#878282\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/sendBtn\"\r\n                android:layout_width=\"24sp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_marginEnd=\"30sp\"\r\n                app:srcCompat=\"@drawable/ic_send\" />\r\n        </LinearLayout>\r\n    </androidx.cardview.widget.CardView>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_group_chat_screen.xml b/app/src/main/res/layout/activity_group_chat_screen.xml
--- a/app/src/main/res/layout/activity_group_chat_screen.xml	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/res/layout/activity_group_chat_screen.xml	(date 1655424380211)
@@ -21,8 +21,7 @@
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:gravity="center"
-            android:orientation="horizontal"
-            >
+            android:orientation="horizontal">
 
             <ImageView
                 android:id="@+id/imageView2"
@@ -33,6 +32,13 @@
                 app:srcCompat="@drawable/ic_left_arrow"
                 app:tint="@color/white" />
 
+            <de.hdodenhof.circleimageview.CircleImageView
+                android:id="@+id/iconGroup"
+                android:layout_width="42dp"
+                android:layout_height="42dp"
+                android:layout_marginLeft="30sp"
+                android:src="@drawable/avatar" />
+
             <LinearLayout
                 android:layout_width="match_parent"
                 android:layout_height="match_parent"
@@ -40,6 +46,15 @@
                 android:gravity="center"
                 android:orientation="vertical">
 
+                <TextView
+                    android:id="@+id/groupName"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Group Title"
+                    android:textColor="@color/white"
+                    android:textSize="18sp"
+                    android:textStyle="bold" />
+
                 <TextView
                     android:id="@+id/status"
                     android:layout_width="match_parent"
@@ -55,13 +70,16 @@
     </androidx.appcompat.widget.Toolbar>
 
     <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/recyclerView"
+        android:id="@+id/recyclerViewGroupMessage"
         android:layout_width="0dp"
         android:layout_height="0dp"
         android:visibility="visible"
         app:layout_constraintBottom_toTopOf="@+id/cardView2"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
+
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        tools:listitem="@layout/sent_groupchat_component"
         app:layout_constraintTop_toBottomOf="@+id/toolbar" />
 
     <androidx.cardview.widget.CardView
Index: app/src/main/res/layout/recived_chat_component.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n\r\n\r\n    android:layout_marginTop=\"8dp\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/constraintCustom\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"5dp\"\r\n        android:background=\"@drawable/recived_drawable\"\r\n        android:maxWidth=\"310dp\"\r\n        android:maxHeight=\"400dp\"\r\n        android:minHeight=\"30dp\"\r\n        android:minWidth=\"100dp\"\r\n\r\n        android:paddingStart=\"10sp\"\r\n        android:paddingLeft=\"15sp\"\r\n        android:paddingTop=\"15sp\"\r\n        android:paddingEnd=\"15sp\"\r\n        android:paddingBottom=\"5sp\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/message\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:gravity=\"center|start\"\r\n            android:paddingLeft=\"5dp\"\r\n            android:paddingTop=\"5dp\"\r\n            android:paddingRight=\"10dp\"\r\n            android:paddingBottom=\"5dp\"\r\n            android:text=\"TextView\"\r\n            android:textSize=\"15sp\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/timeStamp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/timeStamp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingLeft=\"10dp\"\r\n            android:paddingTop=\"5dp\"\r\n\r\n            android:text=\"12:00 AM\"\r\n            android:textSize=\"10sp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/feeling\"\r\n        android:layout_width=\"16dp\"\r\n        android:layout_height=\"16dp\"\r\n        android:visibility=\"invisible\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/constraintCustom\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/constraintCustom\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/constraintCustom\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/constraintCustom\"\r\n        app:srcCompat=\"@drawable/ic_fb_love\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/recived_chat_component.xml b/app/src/main/res/layout/recived_chat_component.xml
--- a/app/src/main/res/layout/recived_chat_component.xml	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/res/layout/recived_chat_component.xml	(date 1655424058160)
@@ -1,70 +1,40 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-
+    android:layout_marginTop="8dp"
+    android:layout_marginBottom="8dp"
+    android:background="@drawable/recived_drawable">
 
-    android:layout_marginTop="8dp">
-
-    <androidx.constraintlayout.widget.ConstraintLayout
-        android:id="@+id/constraintCustom"
+    <TextView
+        android:id="@+id/nameTv"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginStart="5dp"
-        android:background="@drawable/recived_drawable"
-        android:maxWidth="310dp"
-        android:maxHeight="400dp"
-        android:minHeight="30dp"
-        android:minWidth="100dp"
-
-        android:paddingStart="10sp"
-        android:paddingLeft="15sp"
-        android:paddingTop="15sp"
-        android:paddingEnd="15sp"
-        android:paddingBottom="5sp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent">
-
+        android:layout_marginStart="15dp"
+        android:text="Name User"
+        android:textColor="@color/btn_purple"
+        android:textStyle="bold" />
 
-        <TextView
-            android:id="@+id/message"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="center|start"
-            android:paddingLeft="5dp"
-            android:paddingTop="5dp"
-            android:paddingRight="10dp"
-            android:paddingBottom="5dp"
-            android:text="TextView"
-            android:textSize="15sp"
-            app:layout_constraintBottom_toTopOf="@+id/timeStamp"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toTopOf="parent" />
+    <TextView
+        android:id="@+id/messageTv"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/nameTv"
+        android:layout_marginStart="15dp"
+        android:layout_marginBottom="5dp"
+        android:text="The message"
+        android:textColor="@color/black" />
 
-        <TextView
-            android:id="@+id/timeStamp"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:paddingLeft="10dp"
-            android:paddingTop="5dp"
-
-            android:text="12:00 AM"
-            android:textSize="10sp"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintEnd_toEndOf="parent" />
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/messageTv"
+        android:layout_alignParentEnd="true"
+        android:paddingRight="10dp"
+        android:text="12:00"
+        android:textSize="12sp"
 
-    </androidx.constraintlayout.widget.ConstraintLayout>
-
-    <ImageView
-        android:id="@+id/feeling"
-        android:layout_width="16dp"
-        android:layout_height="16dp"
-        android:visibility="invisible"
-        app:layout_constraintBottom_toBottomOf="@+id/constraintCustom"
-        app:layout_constraintEnd_toEndOf="@+id/constraintCustom"
-        app:layout_constraintStart_toEndOf="@+id/constraintCustom"
-        app:layout_constraintTop_toTopOf="@+id/constraintCustom"
-        app:srcCompat="@drawable/ic_fb_love" />
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+        />
+</RelativeLayout>
Index: app/src/main/res/menu/menu_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    >\r\n\r\n    <item android:id=\"@+id/ButtonQrScanMenu\" android:icon=\"@drawable/ic_baseline_qr_code_scanner_24\"\r\n        android:title=\"\" app:showAsAction=\"always\"  />\r\n    <item android:title=\"\" android:id=\"@+id/btnAddNewContactMenu\" android:icon=\"@drawable/ic_baseline_person_add_alt_1_24\" app:showAsAction=\"always\" />\r\n    <item android:id=\"@+id/btnCreateGroupMenu\" android:title=\"Create group\" />\r\n    <item android:id=\"@+id/btnAddFriendMenu\" android:title=\"Add friend\" />\r\n    <item android:title=\"Login History\" android:id=\"@+id/btnLoginHistoryMenu\"/>\r\n    <item android:title=\"Zalo Calendar\" android:id=\"@+id/btnCalendarMenu\"/>\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/menu_home.xml b/app/src/main/res/menu/menu_home.xml
--- a/app/src/main/res/menu/menu_home.xml	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/res/menu/menu_home.xml	(date 1655418617709)
@@ -1,8 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
 <menu xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:android="http://schemas.android.com/apk/res/android"
+
     >
 
+    <item android:icon="@drawable/ic_search"  app:showAsAction="always|collapseActionView" app:actionViewClass="androidx.appcompat.widget.SearchView" android:title="Search" />
     <item android:id="@+id/ButtonQrScanMenu" android:icon="@drawable/ic_baseline_qr_code_scanner_24"
         android:title="" app:showAsAction="always"  />
     <item android:title="" android:id="@+id/btnAddNewContactMenu" android:icon="@drawable/ic_baseline_person_add_alt_1_24" app:showAsAction="always" />
Index: app/src/main/java/ChatApp/android/Model/Group.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ChatApp.android.Model;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Group {\r\n\r\n\r\n\r\n    private String groupID,groupName,adminID,adminName;\r\n    private  long createAt;\r\n    private ArrayList<User> members;\r\n\r\n    public String getGroupID() {\r\n        return groupID;\r\n    }\r\n\r\n    public void setGroupID(String groupID) {\r\n        this.groupID = groupID;\r\n    }\r\n\r\n    public String getGroupName() {\r\n        return groupName;\r\n    }\r\n\r\n    public void setGroupName(String groupName) {\r\n        this.groupName = groupName;\r\n    }\r\n\r\n    public String getAdminID() {\r\n        return adminID;\r\n    }\r\n\r\n    public void setAdminID(String adminID) {\r\n        this.adminID = adminID;\r\n    }\r\n\r\n    public String getAdminName() {\r\n        return adminName;\r\n    }\r\n\r\n    public void setAdminName(String adminName) {\r\n        this.adminName = adminName;\r\n    }\r\n\r\n\r\n\r\n    public ArrayList<User> getMembers() {\r\n        return members;\r\n    }\r\n\r\n    public void setMembers(ArrayList<User> members) {\r\n        this.members = members;\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Model/Group.java b/app/src/main/java/ChatApp/android/Model/Group.java
--- a/app/src/main/java/ChatApp/android/Model/Group.java	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/java/ChatApp/android/Model/Group.java	(date 1655418096183)
@@ -6,9 +6,53 @@
 
 
 
-    private String groupID,groupName,adminID,adminName;
-    private  long createAt;
-    private ArrayList<User> members;
+    private String groupID;
+    private String groupName;
+    private String groupDescription;
+    private String adminID;
+    private String groupIcon;
+    private long createAt;
+
+
+    public Group(){
+
+    }
+    public Group(String groupID,String groupName,String groupDescription,String adminID,long createAt,String icon){
+        this.groupID=groupID;
+        this.groupName=groupName;
+        this.groupDescription=groupDescription;
+        this.groupIcon=icon;
+        this.createAt=createAt;
+        
+
+    }
+    public String getGroupIcon() {
+        return groupIcon;
+    }
+
+    public void setGroupIcon(String groupIcon) {
+        this.groupIcon = groupIcon;
+    }
+
+
+    public String getGroupDescription() {
+        return groupDescription;
+    }
+
+    public void setGroupDescription(String groupDescription) {
+        this.groupDescription = groupDescription;
+    }
+
+
+
+    public long getCreateAt() {
+        return createAt;
+    }
+
+    public void setCreateAt(long createAt) {
+        this.createAt = createAt;
+    }
+
 
     public String getGroupID() {
         return groupID;
@@ -34,23 +78,10 @@
         this.adminID = adminID;
     }
 
-    public String getAdminName() {
-        return adminName;
-    }
 
-    public void setAdminName(String adminName) {
-        this.adminName = adminName;
-    }
 
 
 
-    public ArrayList<User> getMembers() {
-        return members;
-    }
-
-    public void setMembers(ArrayList<User> members) {
-        this.members = members;
-    }
 
 
 
Index: app/src/main/java/ChatApp/android/Fragments/GroupsContact.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ChatApp.android.Fragments;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport ChatApp.android.R;\r\nimport ChatApp.android.databinding.FragmentGroupsContactBinding;\r\n\r\n\r\npublic class GroupsContact extends Fragment {\r\n\r\n   FragmentGroupsContactBinding binding;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n       binding=FragmentGroupsContactBinding.inflate(inflater,container,false);\r\n       View view=binding.getRoot();\r\n        return view;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Fragments/GroupsContact.java b/app/src/main/java/ChatApp/android/Fragments/GroupsContact.java
--- a/app/src/main/java/ChatApp/android/Fragments/GroupsContact.java	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/java/ChatApp/android/Fragments/GroupsContact.java	(date 1655417696907)
@@ -2,12 +2,26 @@
 
 import android.os.Bundle;
 
+import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.RecyclerView;
 
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+
+import java.util.ArrayList;
+import java.util.Locale;
+
+import ChatApp.android.Adapters.GroupChatAdapter;
+import ChatApp.android.Model.Group;
 import ChatApp.android.R;
 import ChatApp.android.databinding.FragmentGroupsContactBinding;
 
@@ -15,6 +29,10 @@
 public class GroupsContact extends Fragment {
 
    FragmentGroupsContactBinding binding;
+   private FirebaseAuth firebaseAuth;
+   private ArrayList<Group> listGroups;
+   private GroupChatAdapter groupChatAdapter;
+   private RecyclerView recyclerViewGroup;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -26,6 +44,66 @@
                              Bundle savedInstanceState) {
        binding=FragmentGroupsContactBinding.inflate(inflater,container,false);
        View view=binding.getRoot();
+
+    recyclerViewGroup=view.findViewById(R.id.recyclerViewGroupList);
+    firebaseAuth=FirebaseAuth.getInstance();
+    loadListGroup();
+
         return view;
     }
+    public void loadListGroup(){
+        listGroups=new ArrayList<>();
+        DatabaseReference reference= FirebaseDatabase.getInstance().getReference("Groups");
+        reference.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                listGroups.clear();
+                for(DataSnapshot ds:snapshot.getChildren()){
+                    if(!ds.child("Participants").child(firebaseAuth.getUid()).exists()){
+                        Group group=ds.getValue(Group.class);
+                        listGroups.add(group);
+
+                    }
+                    groupChatAdapter=new GroupChatAdapter(getActivity(),listGroups);
+                    recyclerViewGroup.setAdapter(groupChatAdapter);
+                }
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+
+            }
+        });
+    }
+
+    private void searchGroupChatList(String query){
+        listGroups=new ArrayList<>();
+        DatabaseReference reference= FirebaseDatabase.getInstance().getReference("Groups");
+        reference.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                listGroups.clear();
+                for(DataSnapshot ds:snapshot.getChildren()){
+
+                    //search group by title
+                    if(!ds.child("Participants").child(firebaseAuth.getUid()).exists()){
+                        if(ds.child("groupName").toString().toLowerCase().contains(query.toLowerCase(Locale.ROOT))){
+                            Group group=ds.getValue(Group.class);
+                            listGroups.add(group);
+                        }
+
+
+                    }
+                    groupChatAdapter=new GroupChatAdapter(getActivity(),listGroups);
+                    recyclerViewGroup.setAdapter(groupChatAdapter);
+                }
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+
+            }
+        });
+    }
+
 }
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"ChatApp.android\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n    <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" />\r\n    <uses-permission android:name=\"android.permission.VIBRATE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.DunnoChat\">\r\n        <activity\r\n            android:name=\".Activities.ProfileContactUser\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.PostTimeLine\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.SearchUser\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.SignUp\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.SignIn\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.EditProfile\"\r\n            android:exported=\"false\" />\r\n\r\n        <service\r\n            android:name=\".Services.MyFirebaseMessagingService\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n        <service\r\n            android:name=\".Services.FloatingWidgetService\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.ScanQrCode\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.GetQrCode\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.ChatUserScreen\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.UserHomeChat\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.SetUpAccountSignUp\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.ConfirmPhoneOTP\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.PhoneNumberVerify\"\r\n            android:exported=\"false\"\r\n            android:windowSoftInputMode=\"stateVisible\" />\r\n        <activity\r\n            android:name=\".Activities.VideoCallIn\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Activities.VideoCallOut\"\r\n            android:exported=\"false\"/>\r\n        <activity\r\n            android:name=\".SplashScreen\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"false\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/AndroidManifest.xml	(date 1655419806222)
@@ -18,6 +18,11 @@
         android:supportsRtl="true"
         android:theme="@style/Theme.DunnoChat">
         <activity
+            android:name=".Activities.GroupCreative"
+            android:exported="false" />
+        <activity android:name=".Activities.GroupChatScreen"
+            android:exported="false"/>
+        <activity
             android:name=".Activities.ProfileContactUser"
             android:exported="false" />
         <activity
@@ -47,6 +52,7 @@
             android:name=".Services.FloatingWidgetService"
             android:enabled="true"
             android:exported="false" />
+
         <activity
             android:name=".Activities.ScanQrCode"
             android:exported="false" />
@@ -74,7 +80,7 @@
             android:exported="false" />
         <activity
             android:name=".Activities.VideoCallOut"
-            android:exported="false"/>
+            android:exported="false" />
         <activity
             android:name=".SplashScreen"
             android:exported="true">
Index: app/src/main/java/ChatApp/android/Adapters/RequestAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ChatApp.android.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.util.AttributeSet;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport ChatApp.android.Activities.ConfirmPhoneOTP;\r\nimport ChatApp.android.Model.Request;\r\nimport ChatApp.android.Model.User;\r\nimport ChatApp.android.R;\r\nimport ChatApp.android.databinding.ItemUserBinding;\r\n\r\npublic class RequestAdapter extends RecyclerView.Adapter<RequestAdapter.RequestViewHolder> {\r\n\r\n    Context context;\r\n    ArrayList<User> users;\r\n    ArrayList<Request> requests;\r\n\r\n    private DatabaseReference   chatRequestRef, chatSentRef,useRef;\r\n\r\n    String currentID;\r\n    public RequestAdapter (Context context,  ArrayList<Request> requests) {\r\n        this.context = context;\r\n        this.requests = requests;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public RequestViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n       View view= LayoutInflater.from(context).inflate(R.layout.item_user,parent,false);\r\n\r\n        currentID=FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n        useRef=FirebaseDatabase.getInstance().getReference().child(\"users\");\r\n\r\n        chatRequestRef = FirebaseDatabase.getInstance().getReference().child(\"Friend Requests\");\r\n        chatSentRef = FirebaseDatabase.getInstance().getReference().child(\"Friend Received\");\r\n       return new RequestViewHolder(view);\r\n    }\r\n    public void addFriendsSuccess(String newFriends){\r\n\r\n\r\n               useRef.child(currentID)\r\n                .child(\"friends\").setValue(newFriends)\r\n                .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Void> task) {\r\n                        if(task.isSuccessful()){\r\n                            Toast.makeText(context, \"Add Friends Sucess\", Toast.LENGTH_SHORT).show();\r\n                            removeRequest(newFriends,currentID);\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n    public void removeRequest(String senderUserId,String receiverUserId){\r\n\r\n        chatRequestRef.child(senderUserId).child(receiverUserId)\r\n                .removeValue().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Void> task) {\r\n                        if(task.isSuccessful()){\r\n                            chatSentRef.child(receiverUserId).child(senderUserId)\r\n                                    .removeValue();\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n    @Override\r\n    public void onBindViewHolder(@NonNull RequestViewHolder holder, int position) {\r\n       Request request=requests.get(position);\r\n\r\n       /*FirebaseDatabase.getInstance().getReference()\r\n               .child(\"users\")\r\n               .child(request.getSenderID()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                   @Override\r\n                   public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                       User user=snapshot.getValue(User.class);\r\n                       String visitorID=user.getUid();\r\n                       holder.binding.displayName.setText(user.getName());\r\n                       Glide.with(context).load(user.getProfileImage())\r\n                               .placeholder(R.drawable.avatar)\r\n                               .into(holder.binding.imageView2);\r\n                   }\r\n\r\n                   @Override\r\n                   public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                   }\r\n               });*/\r\n\r\n        String senderID=request.getSenderID();\r\n        Toast.makeText(context, \"Send =>\"+senderID, Toast.LENGTH_SHORT).show();\r\n        FirebaseDatabase.getInstance().getReference()\r\n                .child(\"users\")\r\n                .child(senderID)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        User user=snapshot.getValue(User.class);\r\n\r\n                        holder.binding.displayName.setText(user.getName());\r\n                        Glide.with(context).load(user.getProfileImage())\r\n                                .placeholder(R.drawable.avatar)\r\n                                .into(holder.binding.imageView2);\r\n\r\n                        holder.binding.acceptBtn.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                //base on current uid => add new child friends => add new ID\r\n                                addFriendsSuccess(senderID);\r\n\r\n                            }\r\n                        });\r\n\r\n                        holder.binding.declineBtn.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n\r\n                              removeRequest(senderID,currentID);\r\n\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n       if(requests!=null){\r\n           return  requests.size();\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public  class RequestViewHolder extends RecyclerView.ViewHolder{\r\n        ItemUserBinding binding;\r\n        public RequestViewHolder(@NonNull View itemView){\r\n            super(itemView);\r\n            binding=ItemUserBinding.bind(itemView);\r\n\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Adapters/RequestAdapter.java b/app/src/main/java/ChatApp/android/Adapters/RequestAdapter.java
--- a/app/src/main/java/ChatApp/android/Adapters/RequestAdapter.java	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/java/ChatApp/android/Adapters/RequestAdapter.java	(date 1655363026455)
@@ -121,6 +121,9 @@
                         User user=snapshot.getValue(User.class);
 
                         holder.binding.displayName.setText(user.getName());
+
+
+
                         Glide.with(context).load(user.getProfileImage())
                                 .placeholder(R.drawable.avatar)
                                 .into(holder.binding.imageView2);
Index: app/src/main/java/ChatApp/android/Adapters/MessageAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ChatApp.android.Adapters;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.github.pgreze.reactions.ReactionPopup;\r\nimport com.github.pgreze.reactions.ReactionsConfig;\r\nimport com.github.pgreze.reactions.ReactionsConfigBuilder;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.remoteconfig.FirebaseRemoteConfig;\r\n\r\nimport java.sql.Timestamp;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\nimport ChatApp.android.R;\r\nimport ChatApp.android.Model.Message;\r\nimport ChatApp.android.databinding.DeleteDialogBinding;\r\nimport ChatApp.android.databinding.RecivedChatComponentBinding;\r\nimport ChatApp.android.databinding.SentChatComponentBinding;\r\n\r\npublic class MessageAdapter  extends RecyclerView.Adapter {\r\n\r\n    Context context;\r\n    ArrayList<Message> messages;\r\n\r\n    final int ITEM_SENT = 1;\r\n    final int ITEM_RECEIVE = 2;\r\n\r\n    String senderRoom;\r\n    String receiverRoom;\r\n    ImageView imageReceiver;\r\n\r\n    FirebaseRemoteConfig remoteConfig;\r\n\r\n    public MessageAdapter(Context context, ArrayList<Message> messages, String senderRoom, String receiverRoom,ImageView imageReceiver) {\r\n        remoteConfig = FirebaseRemoteConfig.getInstance();\r\n        this.context = context;\r\n        this.messages = messages;\r\n        this.senderRoom = senderRoom;\r\n        this.receiverRoom = receiverRoom;\r\n        this.imageReceiver=imageReceiver;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        if(viewType == ITEM_SENT) {\r\n            View view = LayoutInflater.from(context).inflate(R.layout.sent_chat_component, parent, false);\r\n            return new SentViewHolder(view);\r\n        } else {\r\n            View view = LayoutInflater.from(context).inflate(R.layout.recived_chat_component, parent, false);\r\n            return new ReceiverViewHolder(view);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        Message message = messages.get(position);\r\n        if(FirebaseAuth.getInstance().getUid().equals(message.getSenderId())) {\r\n            return ITEM_SENT;\r\n        } else {\r\n            return ITEM_RECEIVE;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\r\n        Message message = messages.get(position);\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"hh:mm a\");\r\n        //setting prepare format datetime and convert from time stamp to date\r\n\r\n        int reactions[] = new int[]{\r\n                R.drawable.ic_fb_like,\r\n                R.drawable.ic_fb_love,\r\n                R.drawable.ic_fb_laugh,\r\n                R.drawable.ic_fb_wow,\r\n                R.drawable.ic_fb_sad,\r\n                R.drawable.ic_fb_angry\r\n        };\r\n\r\n        ReactionsConfig config = new ReactionsConfigBuilder(context)\r\n                .withReactions(reactions)\r\n                .build();\r\n\r\n        ReactionPopup popup = new ReactionPopup(context, config, (pos) -> {\r\n\r\n            if(pos < 0)\r\n                return false;\r\n\r\n            if(holder.getClass() == SentViewHolder.class) {\r\n                SentViewHolder viewHolder = (SentViewHolder)holder;\r\n                viewHolder.binding.feeling.setImageResource(reactions[pos]);\r\n                viewHolder.binding.feeling.setVisibility(View.VISIBLE);\r\n            } else {\r\n                ReceiverViewHolder viewHolder = (ReceiverViewHolder)holder;\r\n                viewHolder.binding.feeling.setImageResource(reactions[pos]);\r\n                viewHolder.binding.feeling.setVisibility(View.VISIBLE);\r\n\r\n\r\n            }\r\n\r\n            message.setFeeling(pos);\r\n\r\n            FirebaseDatabase.getInstance().getReference()\r\n                    .child(\"chats\")\r\n                    .child(senderRoom)\r\n                    .child(\"messages\")\r\n                    .child(message.getMessageId()).setValue(message);\r\n\r\n            FirebaseDatabase.getInstance().getReference()\r\n                    .child(\"chats\")\r\n                    .child(receiverRoom)\r\n                    .child(\"messages\")\r\n                    .child(message.getMessageId()).setValue(message);\r\n\r\n\r\n\r\n            return true; // true is closing popup, false is requesting a new selection\r\n        });\r\n\r\n\r\n        if(holder.getClass() == SentViewHolder.class) {\r\n            SentViewHolder viewHolder = (SentViewHolder)holder;\r\n\r\n            if(message.getMessage().equals(\"photo\")) {\r\n                viewHolder.binding.imageUser.setVisibility(View.VISIBLE);\r\n                viewHolder.binding.message.setVisibility(View.GONE);\r\n                Glide.with(context)\r\n                        .load(message.getImageUrl())\r\n                        .placeholder(R.drawable.placeholder)\r\n                        .into(viewHolder.binding.imageUser);\r\n            }\r\n\r\n            viewHolder.binding.message.setText(message.getMessage());\r\n            //convert time stamp from firebase to data load into component\r\n            long time=message.getTimestamp();\r\n            viewHolder.binding.timeStamp.setText(dateFormat.format(new Date(time)));\r\n\r\n            if(message.getFeeling() >= 0) {\r\n                viewHolder.binding.feeling.setImageResource(reactions[message.getFeeling()]);\r\n                viewHolder.binding.feeling.setVisibility(View.VISIBLE);\r\n            } else {\r\n                viewHolder.binding.feeling.setVisibility(View.GONE);\r\n            }\r\n\r\n            viewHolder.binding.message.setOnTouchListener(new View.OnTouchListener() {\r\n                @Override\r\n                public boolean onTouch(View v, MotionEvent event) {\r\n\r\n                    boolean isFeelingsEnabled = remoteConfig.getBoolean(\"isFeelingsEnabled\");\r\n                    if(isFeelingsEnabled)\r\n                        popup.onTouch(v, event);\r\n                    else\r\n                        Toast.makeText(context, \"This feature is disabled temporarily.\", Toast.LENGTH_SHORT).show();\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            viewHolder.binding.imageUser.setOnTouchListener(new View.OnTouchListener() {\r\n                @Override\r\n                public boolean onTouch(View v, MotionEvent event) {\r\n                    popup.onTouch(v, event);\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            viewHolder.itemView.setOnLongClickListener(new View.OnLongClickListener() {\r\n                @Override\r\n                public boolean onLongClick(View v) {\r\n                    View view = LayoutInflater.from(context).inflate(R.layout.delete_dialog, null);\r\n                    DeleteDialogBinding binding = DeleteDialogBinding.bind(view);\r\n                    AlertDialog dialog = new AlertDialog.Builder(context)\r\n                            .setTitle(\"Delete Message\")\r\n                            .setView(binding.getRoot())\r\n                            .create();\r\n\r\n                    if(remoteConfig.getBoolean(\"isEveryoneDeletionEnabled\")) {\r\n                        binding.everyone.setVisibility(View.VISIBLE);\r\n                    } else {\r\n                        binding.everyone.setVisibility(View.GONE);\r\n                    }\r\n                    binding.everyone.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View v) {\r\n                            message.setMessage(\"This message is removed.\");\r\n                            message.setFeeling(-1);\r\n                            FirebaseDatabase.getInstance().getReference()\r\n                                    .child(\"chats\")\r\n                                    .child(senderRoom)\r\n                                    .child(\"messages\")\r\n                                    .child(message.getMessageId()).setValue(message);\r\n\r\n                            FirebaseDatabase.getInstance().getReference()\r\n                                    .child(\"chats\")\r\n                                    .child(receiverRoom)\r\n                                    .child(\"messages\")\r\n                                    .child(message.getMessageId()).setValue(message);\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n\r\n                    binding.delete.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View v) {\r\n                            FirebaseDatabase.getInstance().getReference()\r\n                                    .child(\"chats\")\r\n                                    .child(senderRoom)\r\n                                    .child(\"messages\")\r\n                                    .child(message.getMessageId()).setValue(null);\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n\r\n                    binding.cancel.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View v) {\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n\r\n                    dialog.show();\r\n\r\n                    return false;\r\n                }\r\n            });\r\n        } else {\r\n            ReceiverViewHolder viewHolder = (ReceiverViewHolder)holder;\r\n            /*if(message.getMessage().equals(\"photo\")) {\r\n                viewHolder.binding.image.setVisibility(View.VISIBLE);\r\n                viewHolder.binding.message.setVisibility(View.GONE);\r\n                Glide.with(context)\r\n                        .load(message.getImageUrl())\r\n                        .placeholder(R.drawable.placeholder)\r\n                        .into(viewHolder.binding.image);\r\n            }*/\r\n            viewHolder.binding.message.setText(message.getMessage());\r\n\r\n            //convert time stamp from firebase to data load into component\r\n            long time=message.getTimestamp();\r\n            viewHolder.binding.timeStamp.setText(dateFormat.format(new Date(time)));\r\n\r\n           //viewHolder.binding.timeStamp.setText(\"No no\");\r\n            if(message.getFeeling() >= 0) {\r\n                //message.setFeeling(reactions[message.getFeeling()]);\r\n                viewHolder.binding.feeling.setImageResource(reactions[message.getFeeling()]);\r\n                viewHolder.binding.feeling.setVisibility(View.VISIBLE);\r\n            } else {\r\n                viewHolder.binding.feeling.setVisibility(View.GONE);\r\n            }\r\n\r\n            viewHolder.binding.message.setOnTouchListener(new View.OnTouchListener() {\r\n                @Override\r\n                public boolean onTouch(View v, MotionEvent event) {\r\n                    popup.onTouch(v, event);\r\n                    return false;\r\n                }\r\n            });\r\n\r\n           /* *viewHolder.binding.image.setOnTouchListener(new View.OnTouchListener() {\r\n                @Override\r\n                public boolean onTouch(View v, MotionEvent event) {\r\n                    popup.onTouch(v, event);\r\n                    return false;\r\n                }\r\n            });*/\r\n\r\n            viewHolder.itemView.setOnLongClickListener(new View.OnLongClickListener() {\r\n                @Override\r\n                public boolean onLongClick(View v) {\r\n                    View view = LayoutInflater.from(context).inflate(R.layout.delete_dialog, null);\r\n                    DeleteDialogBinding binding = DeleteDialogBinding.bind(view);\r\n                    AlertDialog dialog = new AlertDialog.Builder(context)\r\n                            .setTitle(\"Delete Message\")\r\n                            .setView(binding.getRoot())\r\n                            .create();\r\n\r\n                    binding.everyone.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View v) {\r\n                            message.setMessage(\"This message is removed.\");\r\n                            message.setFeeling(-1);\r\n                            FirebaseDatabase.getInstance().getReference()\r\n                                    .child(\"chats\")\r\n                                    .child(senderRoom)\r\n                                    .child(\"messages\")\r\n                                    .child(message.getMessageId()).setValue(message);\r\n\r\n                            FirebaseDatabase.getInstance().getReference()\r\n                                    .child(\"chats\")\r\n                                    .child(receiverRoom)\r\n                                    .child(\"messages\")\r\n                                    .child(message.getMessageId()).setValue(message);\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n\r\n                    binding.delete.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View v) {\r\n                            FirebaseDatabase.getInstance().getReference()\r\n                                    .child(\"chats\")\r\n                                    .child(senderRoom)\r\n                                    .child(\"messages\")\r\n                                    .child(message.getMessageId()).setValue(null);\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n\r\n                    binding.cancel.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View v) {\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n\r\n                    dialog.show();\r\n\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return messages.size();\r\n    }\r\n\r\n    public class SentViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        SentChatComponentBinding binding;\r\n        public SentViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            binding = SentChatComponentBinding.bind(itemView);\r\n        }\r\n    }\r\n\r\n    public class ReceiverViewHolder extends RecyclerView.ViewHolder {\r\n\r\n       RecivedChatComponentBinding binding;\r\n\r\n        public ReceiverViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            binding =RecivedChatComponentBinding.bind(itemView);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Adapters/MessageAdapter.java b/app/src/main/java/ChatApp/android/Adapters/MessageAdapter.java
--- a/app/src/main/java/ChatApp/android/Adapters/MessageAdapter.java	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/java/ChatApp/android/Adapters/MessageAdapter.java	(date 1655424961382)
@@ -31,7 +31,7 @@
 import ChatApp.android.databinding.RecivedChatComponentBinding;
 import ChatApp.android.databinding.SentChatComponentBinding;
 
-public class MessageAdapter  extends RecyclerView.Adapter {
+public class MessageAdapter  extends RecyclerView.Adapter{
 
     Context context;
     ArrayList<Message> messages;
@@ -106,7 +106,7 @@
                 viewHolder.binding.feeling.setVisibility(View.VISIBLE);
             } else {
                 ReceiverViewHolder viewHolder = (ReceiverViewHolder)holder;
-                viewHolder.binding.feeling.setImageResource(reactions[pos]);
+              viewHolder.binding.feeling.setImageResource(reactions[pos]);
                 viewHolder.binding.feeling.setVisibility(View.VISIBLE);
 
 
Index: app/src/main/java/ChatApp/android/di/ViewModelProviderFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/di/ViewModelProviderFactory.java b/app/src/main/java/ChatApp/android/di/ViewModelProviderFactory.java
new file mode 100644
--- /dev/null	(date 1655362658894)
+++ b/app/src/main/java/ChatApp/android/di/ViewModelProviderFactory.java	(date 1655362658894)
@@ -0,0 +1,49 @@
+package ChatApp.android.di;
+
+import androidx.annotation.NonNull;
+import androidx.lifecycle.ViewModel;
+import androidx.lifecycle.ViewModelProvider;
+
+import java.util.Map;
+
+import javax.inject.Inject;
+import javax.inject.Provider;
+
+public class ViewModelProviderFactory implements ViewModelProvider.Factory {
+
+    private static final String TAG = "ViewModelProviderFactor";
+    private final Map<Class<? extends ViewModel>, Provider<ViewModel>> creators;
+
+    @Inject
+    public ViewModelProviderFactory(Map<Class<? extends ViewModel>, Provider<ViewModel>> creators) {
+        this.creators = creators;
+    }
+
+    @SuppressWarnings("unchecked")
+    @NonNull
+    @Override
+    public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {
+
+        Provider<?extends ViewModel> creator = creators.get(modelClass);
+
+        if (creator == null){
+            for (Map.Entry<Class<? extends ViewModel>,Provider<ViewModel>> entry: creators.entrySet()){
+                if (modelClass.isAssignableFrom(entry.getKey())){
+                    creator = entry.getValue();
+                    break;
+                }
+            }
+        }
+
+        if(creator == null){
+            throw new IllegalArgumentException("unknown class"+ modelClass);
+        }
+
+        try {
+            return (T) creator.get();
+        }
+        catch (Exception e){
+            throw new RuntimeException(e);
+        }
+    }
+}
Index: app/src/main/res/layout/activity_user_home_chat.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#f9f9f9\"\r\n    tools:context=\".Activities.UserHomeChat\">\r\n\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/customToolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"?attr/colorPrimary\"\r\n        android:minHeight=\"?attr/actionBarSize\"\r\n        android:theme=\"?attr/actionBarTheme\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"1.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:navigationIcon=\"@drawable/ic_search\"\r\n        app:title=\"Search\"\r\n        app:titleTextColor=\"@color/white\"\r\n\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/frame_layout\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n\r\n        app:layout_constraintBottom_toTopOf=\"@+id/bottomNavigationView\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/customToolbar\" />\r\n\r\n    <com.google.android.material.bottomnavigation.BottomNavigationView\r\n        android:id=\"@+id/bottomNavigationView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:elevation=\"50dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:menu=\"@menu/bottom_menu\" />\r\n\r\n\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_user_home_chat.xml b/app/src/main/res/layout/activity_user_home_chat.xml
--- a/app/src/main/res/layout/activity_user_home_chat.xml	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/res/layout/activity_user_home_chat.xml	(date 1655418722832)
@@ -18,13 +18,11 @@
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="1.0"
         app:layout_constraintStart_toStartOf="parent"
-        app:navigationIcon="@drawable/ic_search"
-        app:title="Search"
+
         app:titleTextColor="@color/white"
 
         app:layout_constraintTop_toTopOf="parent">
 
-
     </androidx.appcompat.widget.Toolbar>
 
     <FrameLayout
Index: app/src/main/java/ChatApp/android/di/ViewModelKey.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/di/ViewModelKey.java b/app/src/main/java/ChatApp/android/di/ViewModelKey.java
new file mode 100644
--- /dev/null	(date 1655362658910)
+++ b/app/src/main/java/ChatApp/android/di/ViewModelKey.java	(date 1655362658910)
@@ -0,0 +1,21 @@
+package ChatApp.android.di;
+
+import androidx.lifecycle.ViewModel;
+
+import com.google.android.datatransport.runtime.dagger.MapKey;
+
+import java.lang.annotation.Documented;
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+
+@Documented
+@Target({ElementType.METHOD})
+@Retention(RetentionPolicy.RUNTIME)
+@MapKey
+public @interface ViewModelKey {
+
+    Class<? extends ViewModel> value();
+}
Index: app/src/main/java/ChatApp/android/Activities/GroupCreative.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Activities/GroupCreative.java b/app/src/main/java/ChatApp/android/Activities/GroupCreative.java
new file mode 100644
--- /dev/null	(date 1655418239720)
+++ b/app/src/main/java/ChatApp/android/Activities/GroupCreative.java	(date 1655418239720)
@@ -0,0 +1,338 @@
+package ChatApp.android.Activities;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.ActionBar;
+import androidx.appcompat.app.AlertDialog;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.app.ActivityCompat;
+import androidx.core.content.ContextCompat;
+
+import android.Manifest;
+import android.app.ProgressDialog;
+import android.content.ContentValues;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.net.Uri;
+import android.os.Bundle;
+import android.provider.MediaStore;
+import android.text.TextUtils;
+import android.view.View;
+import android.widget.EditText;
+import android.widget.ImageView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.storage.FirebaseStorage;
+import com.google.firebase.storage.StorageReference;
+import com.google.firebase.storage.UploadTask;
+
+import java.util.HashMap;
+
+import ChatApp.android.Model.Group;
+import ChatApp.android.databinding.ActivityGroupCreativeBinding;
+
+public class GroupCreative extends AppCompatActivity {
+
+    //permission constants camera and storage request
+    private static final int CAMERA_REQUEST_CODE = 100;
+    private static final int STORAGE_REQUEST_CODE = 200;
+    //image pick constants
+    private static final int IMAGE_PICK_CAMERA_CODE = 300;
+    private static final int IMAGE_PICK_GALLERY_CODE = 400;
+
+    //array permision
+    private String cameraPermission[];
+    private String storagePermission[];
+    private Uri imageUri;
+
+    private ActivityGroupCreativeBinding binding;
+    private ImageView groupIconIV;
+    private EditText groupTitle, groupDescription;
+    private TextView btnCreateGroup;
+    FirebaseAuth firebaseAuth;
+    FirebaseUser user;
+    FirebaseDatabase database;
+
+    ProgressDialog progressDialog;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        binding = ActivityGroupCreativeBinding.inflate(getLayoutInflater());
+        setContentView(binding.getRoot());
+
+        firebaseAuth = FirebaseAuth.getInstance();
+        user = firebaseAuth.getCurrentUser();
+        database=FirebaseDatabase.getInstance();
+
+        //Init UI views in activity group creative
+        groupIconIV = binding.imgViewGroup;
+        groupTitle = binding.editTextGroupTitle;
+        groupDescription = binding.editTextGroupDescription;
+        btnCreateGroup = binding.textView6;
+        //init array permission
+        cameraPermission = new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE};
+
+        storagePermission = new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE};
+
+        //setting progress diaglog
+      progressDialog=new ProgressDialog(this);
+
+        //pick image event
+        groupIconIV.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                showImagePickDialog();
+
+            }
+        });
+
+        //create group event
+        btnCreateGroup.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                createGroupLoad();
+
+            }
+        });
+    }
+
+
+    public void showImagePickDialog() {
+        //options to pick image from
+        String[] options = {"Camera", "Gallery"};
+        AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setTitle("Icon Group");
+        builder.setItems(options, new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                if (which == 0) {
+                    //camera clicked
+                    if (!checkCameraPermission()) {
+                        requestCameraPermission();
+                    } else {
+                        pickFromCamera();
+
+                    }
+
+                } else {
+                    //when user click gallery
+                    if (!checkStoragePermission()) {
+                        requestStoragePermission();
+                    } else {
+                        pickFromGallery();
+
+                    }
+                }
+
+            }
+        }).show();
+    }
+
+    private void pickFromGallery() {
+        Intent intent = new Intent(Intent.ACTION_PICK);
+        intent.setType("image/*");
+        startActivityForResult(intent, IMAGE_PICK_GALLERY_CODE);
+    }
+
+    private void pickFromCamera() {
+
+        ContentValues values = new ContentValues();
+        values.put(MediaStore.Images.Media.TITLE, "Group Image title");
+        values.put(MediaStore.Images.Media.DESCRIPTION, "Group Image Description");
+
+        imageUri = GroupCreative.this.getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);
+
+        Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
+        cameraIntent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);
+        startActivityForResult(cameraIntent, IMAGE_PICK_CAMERA_CODE);
+
+    }
+
+    private boolean checkStoragePermission() {
+        // check if storage permission is enabled or not
+        //return false if permission is not enable
+        //return true if enabled
+        boolean result = ContextCompat.checkSelfPermission(GroupCreative.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) == (PackageManager.PERMISSION_GRANTED);
+        return result;
+
+    }
+
+    public void requestStoragePermission() {
+        ActivityCompat.requestPermissions(GroupCreative.this, storagePermission, STORAGE_REQUEST_CODE);
+
+    }
+
+    private boolean checkCameraPermission() {
+        // check if camera permission is enabled or not
+        //return false if permission is not enable
+        //return true if enabled
+        boolean resultCamera = ContextCompat.checkSelfPermission(GroupCreative.this, Manifest.permission.CAMERA) == (PackageManager.PERMISSION_GRANTED);
+        boolean result = ContextCompat.checkSelfPermission(GroupCreative.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) == (PackageManager.PERMISSION_GRANTED);
+        return result && resultCamera;
+
+    }
+
+    public void requestCameraPermission() {
+        ActivityCompat.requestPermissions(GroupCreative.this, cameraPermission, CAMERA_REQUEST_CODE);
+
+
+    }
+
+    @Override
+    public boolean onSupportNavigateUp() {
+        onBackPressed();
+        return super.onSupportNavigateUp();
+    }
+
+    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+
+        switch (requestCode) {
+            case CAMERA_REQUEST_CODE: {
+                if (grantResults.length > 0) {
+                    boolean cameraAccepted = grantResults[0] == PackageManager.PERMISSION_GRANTED;
+                    boolean writeStorageAccepted = grantResults[1] == PackageManager.PERMISSION_GRANTED;
+                    if (cameraAccepted && writeStorageAccepted) {
+                        pickFromCamera();
+                    } else {
+                        Toast.makeText(GroupCreative.this, "Please  enable Camera and Storage Permission", Toast.LENGTH_SHORT).show();
+                    }
+                }
+            }
+            case STORAGE_REQUEST_CODE: {
+                if (grantResults.length > 0) {
+
+                    boolean writeStorageAccepted = grantResults[0] == PackageManager.PERMISSION_GRANTED;
+                    if (writeStorageAccepted) {
+                        pickFromGallery();
+                    } else {
+                        Toast.makeText(GroupCreative.this, "Please  enable Storage Permission", Toast.LENGTH_SHORT).show();
+                    }
+                }
+            }
+        }
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+        if (resultCode == RESULT_OK) {
+            if (requestCode == IMAGE_PICK_CAMERA_CODE) {
+                imageUri = data.getData();
+                groupIconIV.setImageURI(imageUri);
+            } else if (requestCode == IMAGE_PICK_GALLERY_CODE) {
+                imageUri = data.getData();
+                groupIconIV.setImageURI(imageUri);
+            }
+            super.onActivityResult(requestCode, resultCode, data);
+        }
+    }
+    public void createGroupLoad(){
+
+        progressDialog.setMessage("Creating Group Chat");
+        String groupName=groupTitle.getText().toString();
+        String groupDes=groupDescription.getText().toString();
+        String key=database.getReference().push().getKey();
+
+
+        if(TextUtils.isEmpty(groupName)){
+            binding.editTextGroupTitle.setError("Please Fill the name of group");
+            binding.editTextGroupTitle.requestFocus();
+            //if the text of title null => show error
+            return;
+        }
+
+        //show processing
+       progressDialog.show();
+        if(imageUri==null){
+
+             Group group=new Group(key,groupName,groupDes,firebaseAuth.getCurrentUser().getUid(),System.currentTimeMillis(),"No ICON");
+             addToFireBaseGroup(group,key);
+
+
+        }
+        else{
+            String fileNamePathFirebase="Group_Images/"+"image"+key;
+            StorageReference storageReference= FirebaseStorage.getInstance().getReference(fileNamePathFirebase);
+            storageReference.putFile(imageUri)
+                    .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
+                        @Override
+                        public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
+                            Task<Uri> uriTask=taskSnapshot.getStorage().getDownloadUrl();
+                            while(!!uriTask.isSuccessful());
+                                Uri downloadURi=uriTask.getResult();
+                                if(uriTask.isSuccessful()){
+                                    Group group=new Group(key,groupName,groupDes,firebaseAuth.getCurrentUser().getUid(),System.currentTimeMillis(),downloadURi.toString());
+                                    addToFireBaseGroup(group,key);
+
+                                }
+
+
+
+
+
+
+                        }
+                    }).addOnFailureListener(new OnFailureListener() {
+                        @Override
+                        public void onFailure(@NonNull Exception e) {
+                            //failed and return notification
+
+                            progressDialog.dismiss();
+                            Toast.makeText(GroupCreative.this, ""+e.getMessage(), Toast.LENGTH_SHORT).show();
+
+
+                        }
+                    })
+            ;
+        ;
+        }
+
+    }
+    public void addToFireBaseGroup(Group group,String key){
+        database.getReference("Groups").child(key).setValue(group).addOnSuccessListener(new OnSuccessListener<Void>() {
+                    @Override
+                    public void onSuccess(Void unused) {
+                        String timeStamp=String.valueOf(System.currentTimeMillis());
+                            //create participant user add to group
+                        HashMap<String,String> hashMap=new HashMap<>();
+                        hashMap.put("uid",firebaseAuth.getUid());
+                        hashMap.put("role","creator");
+                        hashMap.put("timeStamp",timeStamp);
+                      DatabaseReference ref=FirebaseDatabase.getInstance().getReference("Groups");
+                              ref.child(group.getGroupID())
+                                .child("Participants").child(firebaseAuth.getCurrentUser().getUid()).setValue(hashMap).addOnSuccessListener(new OnSuccessListener<Void>() {
+                                          @Override
+                                          public void onSuccess(Void unused) {
+                                              Toast.makeText(GroupCreative.this, "Create Group Success", Toast.LENGTH_SHORT).show();
+                                              progressDialog.dismiss();
+                                          }
+                                      }).addOnFailureListener(new OnFailureListener() {
+                                          @Override
+                                          public void onFailure(@NonNull Exception e) {
+                                              Toast.makeText(GroupCreative.this, "Error when create group", Toast.LENGTH_SHORT).show();
+                                              progressDialog.dismiss();
+                                          }
+                                      });
+                    }
+                })
+                .addOnFailureListener(new OnFailureListener() {
+                    @Override
+                    public void onFailure(@NonNull Exception e) {
+
+                    }
+                });
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/ChatApp/android/Activities/GetQrCode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ChatApp.android.Activities;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.media.Image;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\n\r\nimport ChatApp.android.R;\r\n\r\npublic class GetQrCode extends AppCompatActivity {\r\n\r\n    Button ConfirmBtn;\r\n    ImageView QrCodeImage;\r\n    TextView QrCodeInfo;\r\n    byte[] value;\r\n    String name;\r\n    Bitmap bitmap;\r\n    Intent intent;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_get_qr_code);\r\n        RetrieveQrCodeImage();\r\n        onConfirmButton();\r\n    }\r\n\r\n    private void onConfirmButton()\r\n    {\r\n        ConfirmBtn = findViewById(R.id.ButtonConfirm);\r\n        ConfirmBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void RetrieveQrCodeImage()\r\n    {\r\n        QrCodeImage = findViewById(R.id.QRCodeImg);\r\n        QrCodeInfo = findViewById(R.id.TextViewQrCodeInfo);\r\n        intent=getIntent();\r\n        value = intent.getByteArrayExtra(\"QRCodebyteArray\");\r\n        name = intent.getStringExtra(\"QRCodeInfo\");\r\n        bitmap = BitmapFactory.decodeByteArray(value, 0, value.length);\r\n        QrCodeImage.setImageBitmap(bitmap);\r\n        QrCodeInfo.setText(\"Dunno Chat: \" + name);\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        ConfirmBtn = null;\r\n        QrCodeImage= null;\r\n        QrCodeInfo= null;\r\n        value= null;\r\n        name= null;\r\n        bitmap= null;\r\n        intent= null;\r\n        Runtime.getRuntime().gc();\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Activities/GetQrCode.java b/app/src/main/java/ChatApp/android/Activities/GetQrCode.java
--- a/app/src/main/java/ChatApp/android/Activities/GetQrCode.java	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/java/ChatApp/android/Activities/GetQrCode.java	(date 1655362658894)
@@ -54,6 +54,7 @@
         bitmap = BitmapFactory.decodeByteArray(value, 0, value.length);
         QrCodeImage.setImageBitmap(bitmap);
         QrCodeInfo.setText("Dunno Chat: " + name);
+
     }
 
     @Override
Index: app/src/main/res/layout/sent_groupchat_component.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_marginTop=\"5dp\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@drawable/sent_drawable\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/image\"\r\n            android:layout_width=\"200dp\"\r\n            android:layout_height=\"130dp\"\r\n            android:layout_margin=\"5dp\"\r\n            android:scaleType=\"centerCrop\"\r\n            android:visibility=\"gone\"\r\n            app:srcCompat=\"@drawable/avatar\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/message\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingLeft=\"15dp\"\r\n            android:paddingTop=\"5dp\"\r\n            android:paddingRight=\"10dp\"\r\n            android:paddingBottom=\"5dp\"\r\n            android:text=\"TextView\"\r\n            android:textSize=\"13sp\" />\r\n    </LinearLayout>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/feeling\"\r\n        android:layout_width=\"16dp\"\r\n        android:layout_height=\"16dp\"\r\n        android:visibility=\"invisible\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/linearLayout\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/linearLayout\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/linearLayout\"\r\n        app:srcCompat=\"@drawable/ic_fb_love\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/sent_groupchat_component.xml b/app/src/main/res/layout/sent_groupchat_component.xml
--- a/app/src/main/res/layout/sent_groupchat_component.xml	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/res/layout/sent_groupchat_component.xml	(date 1655424245419)
@@ -1,49 +1,43 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-    android:layout_marginTop="5dp">
+    android:layout_marginTop="8dp"
+    android:layout_marginBottom="8dp"
+    android:layout_marginStart="100dp"
+    android:background="@drawable/sent_drawable">
+
+    <TextView
+        android:id="@+id/nameTv"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="15dp"
+        android:text="Name User"
+        android:textSize="18sp"
+        android:textColor="@color/input_text"
+        android:textStyle="bold" />
 
-    <LinearLayout
-        android:id="@+id/linearLayout"
+    <TextView
+        android:id="@+id/messageTv"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:background="@drawable/sent_drawable"
-        android:orientation="vertical"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent">
-
-        <ImageView
-            android:id="@+id/image"
-            android:layout_width="200dp"
-            android:layout_height="130dp"
-            android:layout_margin="5dp"
-            android:scaleType="centerCrop"
-            android:visibility="gone"
-            app:srcCompat="@drawable/avatar" />
+        android:layout_below="@id/nameTv"
+        android:layout_marginStart="15dp"
+        android:layout_marginBottom="5dp"
+        android:text="The message"
+        android:textColor="@color/speech_bubble_agent" />
 
-        <TextView
-            android:id="@+id/message"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:paddingLeft="15dp"
-            android:paddingTop="5dp"
-            android:paddingRight="10dp"
-            android:paddingBottom="5dp"
-            android:text="TextView"
-            android:textSize="13sp" />
-    </LinearLayout>
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/messageTv"
+        android:layout_alignParentEnd="true"
+        android:layout_marginRight="15sp"
+        android:textColor="@color/white"
+        android:text="12:00"
+        android:textSize="12sp"
 
-    <ImageView
-        android:id="@+id/feeling"
-        android:layout_width="16dp"
-        android:layout_height="16dp"
-        android:visibility="invisible"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toStartOf="@+id/linearLayout"
-        app:layout_constraintStart_toStartOf="@+id/linearLayout"
-        app:layout_constraintTop_toTopOf="@+id/linearLayout"
-        app:srcCompat="@drawable/ic_fb_love" />
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+        />
+</RelativeLayout>
Index: app/src/main/res/layout/item_user.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:paddingTop=\"4dp\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView2\"\r\n        android:layout_width=\"50dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:src=\"@drawable/avatar\"\r\n\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:padding=\"10dp\"\r\n        android:scaleType=\"centerCrop\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:layout_marginTop=\"8dp\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/display_name\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginBottom=\"8dp\"\r\n        android:fontFamily=\"@font/raleway_semibold\"\r\n        android:textAppearance=\"@style/TextAppearance.AppCompat.Medium\"\r\n        android:textColor=\"@color/colorSecondaryText\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/request_text\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/imageView2\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/imageView2\"\r\n        tools:text=\"Sample Full Name\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/request_text\"\r\n        android:layout_width=\"285dp\"\r\n        android:layout_height=\"20dp\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:fontFamily=\"@font/raleway_medium\"\r\n        android:textAppearance=\"@style/TextAppearance.AppCompat.Body2\"\r\n        android:textColor=\"@color/colorSecondaryText\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.050\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/imageView2\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/time\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        tools:text=\"@tools:sample/date/hhmm\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/imageView2\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        android:layout_marginEnd=\"8dp\" />\r\n\r\n    <com.google.android.material.button.MaterialButton\r\n        android:id=\"@+id/accept_btn\"\r\n        style=\"@style/Widget.MaterialComponents.Button.OutlinedButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:fontFamily=\"@font/raleway_semibold\"\r\n        android:text=\"Accept\"\r\n        android:textColor=\"@color/colorAccent\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/imageView2\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/request_text\"\r\n        app:strokeColor=\"@color/colorAccent\" />\r\n\r\n    <com.google.android.material.button.MaterialButton\r\n        android:id=\"@+id/decline_btn\"\r\n        style=\"@style/Widget.MaterialComponents.Button.OutlinedButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:fontFamily=\"@font/raleway_semibold\"\r\n        android:text=\"Decline\"\r\n        android:textColor=\"@color/colorSecondaryText\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.093\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/accept_btn\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/request_text\"\r\n        app:strokeColor=\"@color/colorSecondaryText\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_user.xml b/app/src/main/res/layout/item_user.xml
--- a/app/src/main/res/layout/item_user.xml	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/res/layout/item_user.xml	(date 1655363026461)
@@ -43,6 +43,7 @@
         android:fontFamily="@font/raleway_medium"
         android:textAppearance="@style/TextAppearance.AppCompat.Body2"
         android:textColor="@color/colorSecondaryText"
+        android:visibility="gone"
         app:layout_constraintBottom_toBottomOf="@+id/imageView2"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.050"
Index: app/src/main/res/layout/activity_group_creative.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_group_creative.xml b/app/src/main/res/layout/activity_group_creative.xml
new file mode 100644
--- /dev/null	(date 1655385429147)
+++ b/app/src/main/res/layout/activity_group_creative.xml	(date 1655385429147)
@@ -0,0 +1,81 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#E3E4F4"
+    tools:context=".Activities.GroupCreative">
+
+    <de.hdodenhof.circleimageview.CircleImageView
+        android:id="@+id/imgViewGroup"
+        android:layout_width="150dp"
+        android:layout_height="150dp"
+        android:layout_marginTop="100dp"
+        android:src="@drawable/avatar"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+
+    <EditText
+        android:id="@+id/editTextGroupTitle"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="16dp"
+        android:layout_marginTop="84dp"
+        android:layout_marginEnd="16dp"
+        android:background="@drawable/border_input"
+        android:backgroundTint="#FFFFFF"
+        android:ems="10"
+        android:hint="Group Titile"
+        android:inputType="textPersonName|textCapWords"
+        android:paddingStart="10dp"
+        android:paddingTop="10dp"
+        android:paddingBottom="10dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/imgViewGroup" />
+
+    <EditText
+        android:id="@+id/editTextGroupDescription"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="16dp"
+        android:layout_marginTop="36dp"
+        android:layout_marginEnd="16dp"
+        android:background="@drawable/border_input"
+        android:ems="10"
+        android:gravity="top"
+        android:hint="Group Description"
+        android:inputType="textPersonName"
+        android:minHeight="200dp"
+        android:paddingStart="10dp"
+
+        android:paddingTop="10sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="1.0"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/editTextGroupTitle" />
+
+    <TextView
+        android:id="@+id/textView6"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="64dp"
+        android:background="@drawable/btn_green"
+        android:paddingStart="20sp"
+        android:paddingTop="8sp"
+        android:paddingEnd="20sp"
+        android:paddingBottom="8sp"
+        android:text="Create Group"
+        android:textColor="#FAF7F7"
+        android:textSize="20sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/editTextGroupDescription" />
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/ChatApp/android/Adapters/GroupMessageAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Adapters/GroupMessageAdapter.java b/app/src/main/java/ChatApp/android/Adapters/GroupMessageAdapter.java
new file mode 100644
--- /dev/null	(date 1655424420930)
+++ b/app/src/main/java/ChatApp/android/Adapters/GroupMessageAdapter.java	(date 1655424420930)
@@ -0,0 +1,4 @@
+package ChatApp.android.Adapters;
+
+public class GroupMessageAdapter {
+}
Index: app/src/main/java/ChatApp/android/ultis/LoadingDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/ultis/LoadingDialog.java b/app/src/main/java/ChatApp/android/ultis/LoadingDialog.java
new file mode 100644
--- /dev/null	(date 1655362658879)
+++ b/app/src/main/java/ChatApp/android/ultis/LoadingDialog.java	(date 1655362658879)
@@ -0,0 +1,36 @@
+package ChatApp.android.ultis;
+
+import android.app.Dialog;
+import android.os.Bundle;
+import android.view.Gravity;
+import android.view.Window;
+import android.view.WindowManager;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatDialogFragment;
+import ChatApp.android.R;
+
+
+public class LoadingDialog extends AppCompatDialogFragment {
+
+    @NonNull
+    @Override
+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
+
+        // TODO Auto-generated method stub
+        final Dialog dialog = new Dialog(getActivity());
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
+        dialog.setContentView(R.layout.dialog_loading);
+        dialog.setCanceledOnTouchOutside(false);
+        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
+        lp.copyFrom(dialog.getWindow().getAttributes());
+        lp.width = WindowManager.LayoutParams.WRAP_CONTENT;
+        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
+        lp.gravity = Gravity.CENTER;
+
+        dialog.getWindow().setAttributes(lp);
+
+        return dialog;
+    }
+}
Index: app/src/main/res/layout/item_group.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_group.xml b/app/src/main/res/layout/item_group.xml
new file mode 100644
--- /dev/null	(date 1655415330514)
+++ b/app/src/main/res/layout/item_group.xml	(date 1655415330514)
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    app:cardBackgroundColor="@color/white"
+    app:contentPadding="3dp"
+    android:layout_marginTop="1dp"
+    >
+<RelativeLayout
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <de.hdodenhof.circleimageview.CircleImageView
+        android:id="@+id/groupIcon"
+        android:layout_width="70dp"
+        android:layout_height="70dp"
+        android:src="@drawable/avatar" />
+
+
+    <TextView
+        android:id="@+id/groupTitle"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="6dp"
+
+        android:layout_toEndOf="@id/groupIcon"
+
+        android:text="Group Title"
+        android:textSize="18sp" />
+
+    <TextView
+        android:id="@+id/namePaShow"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/groupTitle"
+        android:layout_marginStart="6dp"
+        android:layout_toEndOf="@id/groupIcon"
+        android:text="Sender Name User"
+        android:textColor="@color/btn_purple"
+
+        />
+
+    <TextView
+        android:id="@+id/messPaShow"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/groupTitle"
+        android:layout_marginStart="8dp"
+        android:layout_toEndOf="@id/namePaShow"
+        android:singleLine="true"
+        android:text="The message"
+        android:textColor="#666262" />
+    <TextView
+        android:id="@+id/timePaShow"
+
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textColor="@color/amp_gray"
+        android:layout_below="@id/namePaShow"
+        android:singleLine="true"
+        android:layout_alignParentEnd="true"
+        android:layout_marginEnd="6dp"
+        android:text="00:00"
+        />
+
+
+
+
+</RelativeLayout>
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/java/ChatApp/android/Adapters/GroupChatAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Adapters/GroupChatAdapter.java b/app/src/main/java/ChatApp/android/Adapters/GroupChatAdapter.java
new file mode 100644
--- /dev/null	(date 1655419082698)
+++ b/app/src/main/java/ChatApp/android/Adapters/GroupChatAdapter.java	(date 1655419082698)
@@ -0,0 +1,74 @@
+package ChatApp.android.Adapters;
+
+import android.content.Context;
+import android.content.Intent;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.bumptech.glide.Glide;
+
+import java.util.ArrayList;
+
+import ChatApp.android.Activities.GroupChatScreen;
+import ChatApp.android.Model.Group;
+import ChatApp.android.R;
+import ChatApp.android.databinding.ItemGroupBinding;
+
+public class GroupChatAdapter extends  RecyclerView.Adapter<GroupChatAdapter.HolderGroupChat> {
+    private Context context;
+    private ArrayList<Group> listGroup;
+    public GroupChatAdapter(Context context,ArrayList<Group> listGroup){
+        this.listGroup=listGroup;
+        this.context=context;
+    }
+
+    @NonNull
+    @Override
+    public HolderGroupChat onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        View view= LayoutInflater.from(context).inflate(R.layout.item_group,parent,false);
+        return  new HolderGroupChat(view);
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull HolderGroupChat holder, int position) {
+        Group group=listGroup.get(position);
+        String groupID=group.getGroupID();
+        String groupIcon=group.getGroupIcon();
+        String groupTitle=group.getGroupName();
+
+
+        Glide.with(context).load(groupIcon)
+                .placeholder(R.drawable.avatar)
+                .into(holder.binding.groupIcon);
+        holder.binding.groupTitle.setText(groupTitle);
+
+        holder.itemView.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent intent=new Intent(context, GroupChatScreen.class);
+                intent.putExtra("groupID",groupID);
+                context.startActivity(intent);
+
+            }
+        });
+    }
+
+    @Override
+    public int getItemCount() {
+        return listGroup.size();
+    }
+
+
+    //Ui views
+    class  HolderGroupChat extends RecyclerView.ViewHolder{
+        private ItemGroupBinding binding;
+        public HolderGroupChat(@NonNull View itemView) {
+            super(itemView);
+            binding=ItemGroupBinding.bind(itemView);
+        }
+    }
+}
Index: app/src/main/java/ChatApp/android/Activities/EditProfile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ChatApp.android.Activities;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport android.Manifest;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentValues;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport ChatApp.android.Model.User;\r\nimport ChatApp.android.databinding.ActivityEditProfileBinding;\r\nimport ChatApp.android.R;\r\n\r\npublic class EditProfile extends AppCompatActivity {\r\n\r\n\r\n    /* Edit Profile will include\r\n    *  --> Dunno name user\r\n    * --> Profile Picture\r\n    * ---> Cover Picture\r\n    * */\r\n\r\n    //\r\n\r\n    /**\r\n     * The first thing we will get information about user ( by user ID in realtime database)\r\n     * and setting information to edit field\r\n     * when user click to update button\r\n     * Update all of thing: 1. for normal fied , just easy update by updateuser .\r\n     * 2. for email , first get id and update by function of firebase update email\r\n     * */\r\n    private  ActivityEditProfileBinding binding;\r\n    FirebaseAuth auth;\r\n    FirebaseUser currentUser;\r\n    DatabaseReference databaseReference;\r\n   StorageReference storageReference;\r\n    String storagePath=\"Uses_imageProfile_imageCover/\";\r\n    //user in database\r\n    User user;// user interface load in application\r\n\r\n\r\n    private ProgressDialog progressDialog;\r\n    //setting permission constant\r\n    private static final int CAMERA_REQUEST_CODE=100;\r\n    private static final int STORAGE_REQUEST_CODE=200;\r\n    private static final int IMAGE_PICK_GALLERY_CODE=300;\r\n    private static final int IMAGE_PICK_CAMERA_CODE=400;\r\n\r\n    //array permision\r\n    String cameraPermission[];\r\n    String storagePermission[];\r\n    private Button btnBack,btnUpdate;\r\n\r\n    ImageView coverImage,profileImage;\r\n    EditText editNameUser,editEmailUser,editAddressUser;\r\n    RadioGroup radioGroup;\r\n    RadioButton genderRadio;\r\n    String gender;\r\n\r\n\r\n    Uri imageProfileUri,imageCoverUri;\r\n    Uri imageUri;\r\n    String modeGetImage;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding=ActivityEditProfileBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        cameraPermission=new String[]{Manifest.permission.CAMERA,Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n        storagePermission=new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n        //initialize id of ui\r\n        btnBack=binding.btnBack;\r\n        btnUpdate=binding.btbUpdateProfile;\r\n        //load item from UI\r\n        coverImage=binding.coverImageUser;\r\n        profileImage=binding.profileImageUser;\r\n        editNameUser=binding.editTextNameUser;\r\n        editEmailUser=binding.editTextEmailUser;\r\n        editAddressUser=binding.editTextAddressUser;\r\n\r\n        radioGroup=binding.radioGroup;\r\n\r\n        //initialize firebase\r\n        auth=FirebaseAuth.getInstance();\r\n        currentUser= auth.getCurrentUser();\r\n        databaseReference=FirebaseDatabase.getInstance().getReference(\"users\");\r\n        storageReference= FirebaseStorage.getInstance().getReference();\r\n\r\n\r\n        getCurrentUser();\r\n        coverImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                modeGetImage=\"cover\";\r\n                showEditProfileImage();\r\n                binding.coverImageUser.setImageURI(imageCoverUri);\r\n            }\r\n        });\r\n        profileImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                modeGetImage=\"profile\";\r\n                showEditProfileImage();\r\n                binding.profileImageUser.setImageURI(imageProfileUri);\r\n            }\r\n        });\r\n\r\n        //radio group event\r\n        radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                int radioID=group.getCheckedRadioButtonId();\r\n                genderRadio=findViewById(radioID);\r\n                gender=genderRadio.getText().toString();\r\n            }\r\n        });\r\n\r\n        //get current user to load in edit profile page\r\n\r\n        btnUpdate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                uploadNewInformation();\r\n            }\r\n        });\r\n\r\n        exitEditProfileScreen();\r\n    }\r\n\r\n\r\n    public void exitEditProfileScreen(){\r\n        btnBack.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Storage Permission\r\n    private boolean checkStoragePermission(){\r\n        // check if storage permission is enabled or not\r\n        //return false if permission is not enable\r\n        //return true if enabled\r\n        boolean result= ContextCompat.checkSelfPermission(EditProfile.this,Manifest.permission.WRITE_EXTERNAL_STORAGE)==(PackageManager.PERMISSION_GRANTED);\r\n        return result;\r\n\r\n    }\r\n    public void requestStoragePermission(){\r\n        ActivityCompat.requestPermissions(EditProfile.this,storagePermission,STORAGE_REQUEST_CODE);\r\n\r\n    }\r\n    //Camera Permission\r\n    private boolean checkCameraPermission(){\r\n        // check if camera permission is enabled or not\r\n        //return false if permission is not enable\r\n        //return true if enabled\r\n        boolean resultCamera= ContextCompat.checkSelfPermission(EditProfile.this,Manifest.permission.CAMERA)==(PackageManager.PERMISSION_GRANTED);\r\n        boolean result= ContextCompat.checkSelfPermission(EditProfile.this,Manifest.permission.WRITE_EXTERNAL_STORAGE)==(PackageManager.PERMISSION_GRANTED);\r\n        return result&&resultCamera;\r\n\r\n    }\r\n    public void requestCameraPermission(){\r\n        ActivityCompat.requestPermissions(EditProfile.this,cameraPermission,CAMERA_REQUEST_CODE);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    public void showEditProfileImage(){\r\n        AlertDialog.Builder builder=new AlertDialog.Builder(this);\r\n        //setting options\r\n        String options[]={\"View Cover\",\"Take photo\",\"Choose from gallery\",\"Cancel\"};\r\n        builder.setTitle(\"Cover\");\r\n        builder.setItems(options,((dialog, which) -> {\r\n            if (which==0){\r\n                Toast.makeText(this, \"This function during updated\", Toast.LENGTH_SHORT).show();\r\n\r\n            }\r\n            else  if(which==1){\r\n                //camera clicked\r\n                if(!checkCameraPermission()){\r\n                    requestCameraPermission();\r\n                }\r\n                else {\r\n                    pickFromCamera();\r\n                }\r\n            }\r\n            else if(which==2){\r\n                if(!checkStoragePermission()){\r\n                    requestStoragePermission();\r\n\r\n                }\r\n                else{\r\n                    pickFromGallery();\r\n                }\r\n\r\n\r\n\r\n            }\r\n            else if(which==3){\r\n                return;\r\n            }\r\n        }));\r\n        builder.create().show();\r\n    }\r\n\r\n\r\n    public void getCurrentUser(){\r\n\r\n\r\n        DatabaseReference reference=databaseReference.child(currentUser.getUid());\r\n\r\n       reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()){\r\n                    user=snapshot.getValue(User.class);\r\n\r\n                    editNameUser.setText(user.getName());\r\n                    editEmailUser.setText(user.getEmail());\r\n                    editAddressUser.setText(user.getAddressUser());\r\n                    String getGender=user.getGender();\r\n\r\n                    editEmailUser.setEnabled(false);\r\n\r\n                    if(getGender.equals(\"Female\")){\r\n                        binding.radioFemale.setChecked(true);\r\n                    }else{\r\n                        binding.radioMale.setChecked(true);\r\n                    }\r\n\r\n                    Glide.with(EditProfile.this).load(user.getProfileImage()).centerCrop().placeholder(R.drawable.avatar).into(binding.profileImageUser);\r\n                    Glide.with(EditProfile.this).load(user.getCoverImage()).placeholder(R.drawable.wall).into(binding.coverImageUser);\r\n\r\n                }\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private void pickFromCamera(){\r\n\r\n        ContentValues values=new ContentValues();\r\n        values.put(MediaStore.Images.Media.TITLE,\"Temp Pic\");\r\n        values.put(MediaStore.Images.Media.DESCRIPTION,\"Temp Description\");\r\n\r\n        imageUri=EditProfile.this.getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,values);\r\n\r\n        Intent cameraIntent=new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        cameraIntent.putExtra(MediaStore.EXTRA_OUTPUT,imageUri);\r\n        startActivityForResult(cameraIntent,IMAGE_PICK_CAMERA_CODE);\r\n\r\n    }\r\n    private  void pickFromGallery(){\r\n        //pick from gallery\r\n        Intent galleryIntent=new Intent();\r\n        galleryIntent.setAction(Intent.ACTION_GET_CONTENT);\r\n        galleryIntent.setType(\"image/*\");\r\n        startActivityForResult(galleryIntent,IMAGE_PICK_GALLERY_CODE);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {\r\n\r\n        switch (requestCode){\r\n            case CAMERA_REQUEST_CODE:{\r\n                if(grantResults.length>0){\r\n                    boolean cameraAccepted =grantResults[0]==PackageManager.PERMISSION_GRANTED;\r\n                    boolean writeStorageAccepted=grantResults[1]==PackageManager.PERMISSION_GRANTED;\r\n                    if (cameraAccepted&&writeStorageAccepted){\r\n                        pickFromCamera();\r\n                    }\r\n                    else{\r\n                       Toast.makeText(EditProfile.this,\"Please  enable Camera and Storage Permission\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n            case STORAGE_REQUEST_CODE:{\r\n                if(grantResults.length>0){\r\n\r\n                    boolean writeStorageAccepted=grantResults[1]==PackageManager.PERMISSION_GRANTED;\r\n                    if (writeStorageAccepted){\r\n                        pickFromGallery();\r\n                    }\r\n                    else{\r\n                        Toast.makeText(EditProfile.this,\"Please  enable Storage Permission\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        // this method called when user press allow or deny from request permission diaglog\r\n        //It will handle permission case (Allow & denied )\r\n\r\n\r\n            switch (requestCode){\r\n                case IMAGE_PICK_CAMERA_CODE:{\r\n                    if(modeGetImage.equals(\"cover\")){\r\n                        imageCoverUri=data.getData();\r\n                        Toast.makeText(this, \"Modata ak\"+data.getData(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    else{\r\n                        imageProfileUri=data.getData();\r\n                    }\r\n                }\r\n                case IMAGE_PICK_GALLERY_CODE:{\r\n                    if(modeGetImage.equals(\"cover\")){\r\n                        imageCoverUri=data.getData();\r\n\r\n                    }\r\n                    else{\r\n                        imageProfileUri=data.getData();\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\n    private void uploadProfileAvatar(Uri uri,String modeChooseImage) {\r\n        /**\r\n         *The rule of database is only 1 image for profile image user and 1 image for cover image user\r\n         * */\r\n        if(uri!=null) {\r\n            String filePath = storagePath + \"\" + modeChooseImage + \"_\" + user.getUid();\r\n            StorageReference storageReference1 = storageReference.child(filePath);\r\n            storageReference1.putFile(uri)\r\n                    .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                            //storage image to storage database and then storage to user\r\n                            //whe\r\n                            Task<Uri> uriTask = taskSnapshot.getStorage().getDownloadUrl();\r\n                            while (!uriTask.isSuccessful()) {\r\n                                Uri downloadUri = uriTask.getResult();\r\n                                if (uriTask.isSuccessful()) {\r\n                                    HashMap<String, Object> result = new HashMap<>();\r\n                                    result.put(modeChooseImage, downloadUri.toString());\r\n                                    databaseReference.child(user.getUid()).child(modeChooseImage).updateChildren(result)\r\n                                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                @Override\r\n                                                public void onSuccess(Void unused) {\r\n\r\n                                                }\r\n                                            }).addOnFailureListener(new OnFailureListener() {\r\n                                                @Override\r\n                                                public void onFailure(@NonNull Exception e) {\r\n                                                    progressDialog.dismiss();\r\n                                                    Toast.makeText(EditProfile.this, \"Image updated Failed\", Toast.LENGTH_SHORT).show();\r\n\r\n                                                }\r\n                                            });\r\n\r\n                                } else {\r\n\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n\r\n                        }\r\n                    });\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    private void uploadNewInformation(){\r\n        //First check the valid of field\r\n\r\n\r\n        if(!user.getEmail().equals(editEmailUser.getText().toString())){\r\n            /**\r\n             * We need to authentication from old email\r\n             * update email to firebase\r\n             * then reauthentication with email new and password\r\n             * */\r\n\r\n        }\r\n        /// normal field\r\n        int checkedId=radioGroup.getCheckedRadioButtonId();\r\n        RadioButton radioButton=radioGroup.findViewById(checkedId);\r\n\r\n\r\n\r\n\r\n        user.setAddressUser(editAddressUser.getText().toString());\r\n        user.setGender(radioButton.getText().toString());\r\n        user.setName(editNameUser.getText().toString());\r\n        Map<String,Object> result =user.toMap();\r\n        //upload new image for avatar and cover\r\n        uploadProfileAvatar(imageProfileUri,\"profileImage\");\r\n        uploadProfileAvatar(imageCoverUri,\"coverImage\");\r\n        //set uri\r\n\r\n        databaseReference.child(user.getUid()).updateChildren(result)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void unused) {\r\n                        finish();\r\n                    }\r\n                });\r\n        //email field password\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Activities/EditProfile.java b/app/src/main/java/ChatApp/android/Activities/EditProfile.java
--- a/app/src/main/java/ChatApp/android/Activities/EditProfile.java	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/java/ChatApp/android/Activities/EditProfile.java	(date 1655362658910)
@@ -260,13 +260,14 @@
                     String getGender=user.getGender();
 
                     editEmailUser.setEnabled(false);
+                    if(!getGender.isEmpty()) {
 
-                    if(getGender.equals("Female")){
-                        binding.radioFemale.setChecked(true);
-                    }else{
-                        binding.radioMale.setChecked(true);
+                        if (getGender.equals("Female")) {
+                            binding.radioFemale.setChecked(true);
+                        } else {
+                            binding.radioMale.setChecked(true);
+                        }
                     }
-
                     Glide.with(EditProfile.this).load(user.getProfileImage()).centerCrop().placeholder(R.drawable.avatar).into(binding.profileImageUser);
                     Glide.with(EditProfile.this).load(user.getCoverImage()).placeholder(R.drawable.wall).into(binding.coverImageUser);
 
@@ -323,7 +324,7 @@
             case STORAGE_REQUEST_CODE:{
                 if(grantResults.length>0){
 
-                    boolean writeStorageAccepted=grantResults[1]==PackageManager.PERMISSION_GRANTED;
+                    boolean writeStorageAccepted=grantResults[0]==PackageManager.PERMISSION_GRANTED;
                     if (writeStorageAccepted){
                         pickFromGallery();
                     }
Index: app/src/main/java/ChatApp/android/Activities/UserHomeChat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ChatApp.android.Activities;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\n\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Rect;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.navigation.NavigationBarView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\nimport org.json.JSONException;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\nimport ChatApp.android.Fragments.AccountDetail;\r\nimport ChatApp.android.Fragments.ContactUser;\r\nimport ChatApp.android.Fragments.ConversationUser;\r\nimport ChatApp.android.Fragments.Notification;\r\nimport ChatApp.android.Fragments.Timelines;\r\nimport ChatApp.android.Model.User;\r\nimport ChatApp.android.R;\r\n\r\nimport ChatApp.android.databinding.ActivityUserHomeChatBinding;\r\n\r\n\r\npublic class UserHomeChat extends AppCompatActivity {\r\n    private ActivityUserHomeChatBinding binding;\r\n\r\n    MenuItem ButtonScanQRCode;\r\n    User user;\r\n    ConversationUser conversationUserFragment=new ConversationUser();\r\n    AccountDetail accountDetailFragment=new AccountDetail();\r\n    ContactUser contactUserFragment=new ContactUser();\r\n    Timelines timelinesFragment=new Timelines();\r\n    Notification notificationFragment=new Notification();\r\n    BottomNavigationView bottomNavigationView;\r\n\r\n    LinearLayout searchBar;\r\n    Toolbar toolbar;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding= ActivityUserHomeChatBinding.inflate(getLayoutInflater());\r\n        setContentView(R.layout.activity_user_home_chat);\r\n        getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout,conversationUserFragment).commit();\r\n        bottomNavigationView=findViewById(R.id.bottomNavigationView);\r\n\r\n//        String token = FirebaseMessaging.getInstance().getToken().toString();\r\n//        Log.d(\"TOKEN\",token);\r\n//        FirebaseMessaging.getInstance().deleteToken();\r\n//            FirebaseMessaging.getInstance().getToken()\r\n//                .addOnCompleteListener(task -> {\r\n//                            if (task.isSuccessful() && task.getResult() != null) {\r\n//                        NotificationModel nm = new NotificationModel(task.getResult(),\"test\",\"haha\");\r\n//                        new PushNotificationSender().execute(nm);\r\n//                        String uid = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n//                        FirebaseDatabase.getInstance().getReference(\"users\").child(uid).child(\"token\").setValue(task.getResult());\r\n//                                Log.d(\"TOKEN\", task.getResult());\r\n//                            }\r\n//                        });\r\n\r\n        toolbar=findViewById(R.id.customToolbar);\r\n        setSupportActionBar(toolbar);\r\n        toolbar.setOverflowIcon(ContextCompat.getDrawable(this,R.drawable.ic_baseline_add_24));\r\n\r\n        toolbar.setOnMenuItemClickListener(new Toolbar.OnMenuItemClickListener() {\r\n            @Override\r\n            public boolean onMenuItemClick(MenuItem item) {\r\n                switch (item.getItemId()){\r\n                    case R.id.ButtonQrScanMenu:\r\n                        Intent i = new Intent(UserHomeChat.this,ScanQrCode.class);\r\n                        startActivity(i);\r\n                        return true;\r\n                    case R.id.btnCreateGroupMenu:\r\n\r\n\r\n\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        toolbar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent=new Intent(UserHomeChat.this,SearchUser.class);\r\n                startActivity(intent);\r\n            }\r\n\r\n        });\r\n\r\n      bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {\r\n          @Override\r\n          public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n              switch (item.getItemId()){\r\n                  case R.id.message:\r\n                      toolbar.getMenu().findItem(R.id.btnAddNewContactMenu).setVisible(false);\r\n                      getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout,conversationUserFragment).commit();\r\n                      return  true;\r\n                  case R.id.contact:\r\n                      toolbar.getMenu().findItem(R.id.btnAddNewContactMenu).setVisible(true);\r\n                      getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout,contactUserFragment).commit();\r\n                      return true;\r\n                  case R.id.notification:\r\n                      toolbar.getMenu().findItem(R.id.btnAddNewContactMenu).setVisible(false);\r\n                      getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout,notificationFragment).commit();\r\n                      return true;\r\n\r\n                  case R.id.timeline:\r\n                        getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout,timelinesFragment).commit();\r\n                      return true;\r\n                  case R.id.account:\r\n                      getSupportFragmentManager().beginTransaction().replace(R.id.frame_layout,accountDetailFragment).commit();\r\n                      return  true;\r\n              }\r\n              return false;\r\n          }\r\n      });\r\n      //onScanQRCode();\r\n      onSearchUsers();\r\n}\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n\r\n        getMenuInflater().inflate(R.menu.menu_home,menu);\r\n        menu.findItem(R.id.btnAddNewContactMenu).setVisible(false);\r\n        return super.onCreateOptionsMenu(menu);\r\n\r\n    }\r\n    private void loadFragment(Fragment fragment) {\r\n        // load fragment\r\n        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();\r\n        transaction.replace(R.id.frame_layout, fragment);\r\n\r\n        transaction.commit();\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case R.id.ButtonQrScanMenu:\r\n                Intent i = new Intent(UserHomeChat.this,ScanQrCode.class);\r\n                startActivity(i);\r\n                return true;\r\n            case R.id.btnCreateGroupMenu:\r\n\r\n\r\n\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n   /* private void onScanQRCode()\r\n    {\r\n        ButtonScanQRCode = findViewById(R.id.ButtonQrScanMenu);\r\n        ButtonScanQRCode.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(UserHomeChat.this,ScanQrCode.class);\r\n                startActivity(i);\r\n            }\r\n        });\r\n    }*/\r\n\r\n    //search event\r\n    private void onSearchUsers(){\r\n\r\n    }\r\n\r\n    //when user use application => status of user will online\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n    }\r\n    //when user stop use application => status offline\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n    }\r\n\r\n    //Lose edittext focus when click outside\r\n    @Override\r\n    public boolean dispatchTouchEvent(MotionEvent event) {\r\n        if (event.getAction() == MotionEvent.ACTION_DOWN) {\r\n            View v = getCurrentFocus();\r\n            if ( v instanceof EditText) {\r\n                Rect outRect = new Rect();\r\n                v.getGlobalVisibleRect(outRect);\r\n                if (!outRect.contains((int)event.getRawX(), (int)event.getRawY())) {\r\n                    Log.d(\"focus\", \"touchevent\");\r\n                    v.clearFocus();\r\n                    InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\r\n                    imm.hideSoftInputFromWindow(v.getWindowToken(), 0);\r\n                }\r\n            }\r\n        }\r\n        return super.dispatchTouchEvent(event);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ChatApp/android/Activities/UserHomeChat.java b/app/src/main/java/ChatApp/android/Activities/UserHomeChat.java
--- a/app/src/main/java/ChatApp/android/Activities/UserHomeChat.java	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/java/ChatApp/android/Activities/UserHomeChat.java	(date 1655362658926)
@@ -100,6 +100,9 @@
                         startActivity(i);
                         return true;
                     case R.id.btnCreateGroupMenu:
+                        Intent intent=new Intent(UserHomeChat.this,GroupCreative.class);
+                        startActivity(intent);
+                        return true;
 
 
 
Index: app/src/main/res/layout/fragment_groups_contact.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Fragments.GroupsContact\">\r\n\r\n    <!-- TODO: Update blank fragment layout -->\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:text=\"group contact\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_groups_contact.xml b/app/src/main/res/layout/fragment_groups_contact.xml
--- a/app/src/main/res/layout/fragment_groups_contact.xml	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/res/layout/fragment_groups_contact.xml	(date 1655416364728)
@@ -3,12 +3,22 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     tools:context=".Fragments.GroupsContact">
-
-    <!-- TODO: Update blank fragment layout -->
-    <TextView
+    <ScrollView
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="group contact" />
+        android:layout_height="match_parent">
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/recyclerViewGroupList"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            tools:listitem="@layout/item_group"
+
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            >
+
+        </androidx.recyclerview.widget.RecyclerView>
+    </ScrollView>
+
 
 </FrameLayout>
\ No newline at end of file
Index: app/src/main/res/menu/top_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n\r\n    <item\r\n        android:id=\"@+id/call\"\r\n        android:icon=\"@drawable/ic_call\"\r\n        android:title=\"Call\"\r\n        app:showAsAction=\"always\" />\r\n    <item\r\n        android:id=\"@+id/contact\"\r\n        android:icon=\"@drawable/ic_video\"\r\n        android:title=\"Plus\"\r\n        app:showAsAction=\"always\" />\r\n    <item\r\n\r\n        android:title=\"Create group\" />\r\n    <item android:title=\"Add friend\" />\r\n    <item android:title=\"Dunno Calendar\" />\r\n    <item android:title=\"Login history\" />\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/top_menu.xml b/app/src/main/res/menu/top_menu.xml
--- a/app/src/main/res/menu/top_menu.xml	(revision 11140f2a5d31bf39fcb400908a7ea3399de48816)
+++ b/app/src/main/res/menu/top_menu.xml	(date 1655383778845)
@@ -17,5 +17,7 @@
         android:title="Create group" />
     <item android:title="Add friend" />
     <item android:title="Dunno Calendar" />
+    <item android:title="Block user" android:id="@+id/btnBlockFriend" />
     <item android:title="Login history" />
+
 </menu>
\ No newline at end of file
